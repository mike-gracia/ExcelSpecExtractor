#region bool? HasCompletedStateQuestion (Line Ui Question)
internal Changeable<bool?> _hasCompletedStateQuestion;
/// <summary>
/// Select an option for whether the other state return has been completed (Changeable)
/// Reference Number UTCompletedState 
/// </summary>
[Description("Select an option for whether the other state return has been completed"), Category("1 - Income"), ReferenceNumber("UTCompletedState"), LineNumber("Ui Question")]
public bool? HasCompletedStateQuestion { get { return _hasCompletedStateQuestion.Value; } set {_hasCompletedStateQuestion.Value = value;}}
public bool HasCompletedStateQuestion_Value { get { return HasCompletedStateQuestion.GetValueOrDefault();}}
#endregion HasCompletedStateQuestion

#region decimal PortionOfFederalAgiTaxedByBothUi (Line UI Question)
internal Changeable<decimal> _portionOfFederalAgiTaxedByBothUi;
/// <summary>
/// Federal AGI taxed by both states (Changeable)
/// Reference Number TC40SFedAGITaxedBothUI 
/// </summary>
[Money(AllowNegative = false, Precision = PrecisionType.Zero)]
[Description("Federal AGI taxed by both states"), Category("1 - Income"), ReferenceNumber("TC40SFedAGITaxedBothUI"), LineNumber("UI Question")]
public decimal PortionOfFederalAgiTaxedByBothUi { get { return _portionOfFederalAgiTaxedByBothUi.Value; } set {_portionOfFederalAgiTaxedByBothUi.Value = value;}}
#endregion PortionOfFederalAgiTaxedByBothUi

#region decimal IncomeTaxLessCreditsPaidToOtherStateUi (Line UI Question)
internal Changeable<decimal> _incomeTaxLessCreditsPaidToOtherStateUi;
/// <summary>
/// 'Actual income tax paid to state shown on Line 1.<br />Part-year residents must prorate tax paid to other state. Credit only applies to the portion of actual taxes paid to the other state on income shown on Line 1.' (Changeable)
/// Reference Number TC40SActualTaxPaidUI 
/// </summary>
[Money(AllowNegative = false, Precision = PrecisionType.Zero)]
[Description("'Actual income tax paid to state shown on Line 1.<br />Part-year residents must prorate tax paid to other state. Credit only applies to the portion of actual taxes paid to the other state on income shown on Line 1.'"), Category("1 - Income"), ReferenceNumber("TC40SActualTaxPaidUI"), LineNumber("UI Question")]
public decimal IncomeTaxLessCreditsPaidToOtherStateUi { get { return _incomeTaxLessCreditsPaidToOtherStateUi.Value; } set {_incomeTaxLessCreditsPaidToOtherStateUi.Value = value;}}
#endregion IncomeTaxLessCreditsPaidToOtherStateUi

#region decimal PortionOfFederalAgiTaxedByBoth (Line TC-40S, Line 1)
internal Calculatable<decimal, RoundedToTheNearestInteger> _portionOfFederalAgiTaxedByBoth;
/// <summary>
/// Federal AGI taxed by both states (Calculatable)
/// Reference Number TC40SFedAGITaxedBoth 
/// </summary>
[Money(AllowNegative = false, Precision = PrecisionType.Zero)]
[Description("Federal AGI taxed by both states"), Category("1 - Income"), ReferenceNumber("TC40SFedAGITaxedBoth"), LineNumber("TC-40S, Line 1")]
public decimal PortionOfFederalAgiTaxedByBoth { get { return _portionOfFederalAgiTaxedByBoth.Calculate(PortionOfFederalAgiTaxedByBoth_Calculation); } }
private decimal PortionOfFederalAgiTaxedByBoth_Calculation()
{
//'IF [FDAWCalc:PYNRAWRes]=R AND
//      [SJState] = [TC40SOthState] AND 
//      [SJInUse] = YES AND NR State is on valid state list for
//       StateTaxReferenceWorksheet
//        RETURN [SJFedAGI];
// ELSE RETURN [TC40SFedAGITaxedBothUI]'
return default(decimal);
}
#endregion PortionOfFederalAgiTaxedByBoth

#region decimal IncomeTaxLessCreditsPaidToOtherState (Line TC-40S, Line 6)
internal Calculatable<decimal, RoundedToTheNearestInteger> _incomeTaxLessCreditsPaidToOtherState;
/// <summary>
/// 'Actual income tax paid to state shown on Line 1.<br />Part-year residents must prorate tax paid to other state. Credit only applies to the portion of actual taxes paid to the other state on income shown on Line 1.' (Calculatable)
/// Reference Number TC40SActualTaxPaid 
/// </summary>
[Money(AllowNegative = false, Precision = PrecisionType.Zero)]
[Description("'Actual income tax paid to state shown on Line 1.<br />Part-year residents must prorate tax paid to other state. Credit only applies to the portion of actual taxes paid to the other state on income shown on Line 1.'"), Category("1 - Income"), ReferenceNumber("TC40SActualTaxPaid"), LineNumber("TC-40S, Line 6")]
public decimal IncomeTaxLessCreditsPaidToOtherState { get { return _incomeTaxLessCreditsPaidToOtherState.Calculate(IncomeTaxLessCreditsPaidToOtherState_Calculation); } }
private decimal IncomeTaxLessCreditsPaidToOtherState_Calculation()
{
//'IF [FDAWCalc:PYNRAWRes]=R AND
//      [SJState] = [TC40SOthState] AND 
//      [SJInUse] = YES AND NR State is on valid state list for
//       StateTaxReferenceWorksheet
//        RETURN [SJTaxDueAfterCred];
// ELSE RETURN [TC40SActualTaxPaidUI]'
return default(decimal);
}
#endregion IncomeTaxLessCreditsPaidToOtherState

/* */

